var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('aside',{staticClass:"aside-column"},[_c('section',{staticClass:"user"},[_c('div',{staticClass:"user-details"},[_c('h3',[_vm._v(_vm._s(_vm.greeting))])])]),_vm._v(" "),_c('modal',{ref:"settings",attrs:{"header":"Settings"}},[_c('div',{staticClass:"button-group"},[(_vm.user)?_c('button',{on:{"click":_vm.signOut}},[_vm._v("Logout")]):_vm._e(),_vm._v(" "),_c('button',{attrs:{"disabled":""}},[_vm._v("soon (tm)")])]),_vm._v(" "),_c('div',{staticClass:"settings"},[_c('section',[_c('h3',[_vm._v("Appearance")]),_vm._v(" "),_c('ul',[_c('checkbox',{attrs:{"reflect":_vm.useAltTitle,"label":"Use english titles"},on:{"statechange":_vm.toggleTitleLang}})],1)]),_vm._v(" "),_c('section',[_c('h3',[_vm._v("Anime Tracking")]),_vm._v(" "),_c('ul',[_c('checkbox',{attrs:{"reflect":_vm.autoTrackerEnabled,"label":"Automatically mark episodes as complete"},on:{"statechange":_vm.toggleAutoTracker}}),_vm._v(" "),_c('checkbox',{attrs:{"reflect":_vm.alwaysResumeEpisode,"label":"Always resume from last watched episode"},on:{"statechange":_vm.toggleAlwaysResume}}),_vm._v(" "),_c('checkbox',{attrs:{"disabled":!_vm.autoTrackerEnabled,"reflect":_vm.useTrackingNotifications,"label":"Show notifications when episodes get marked as complete"},on:{"statechange":_vm.toggleTrackingNotifications}}),_vm._v(" "),_c('checkbox',{attrs:{"disabled":_vm.alwaysResumeEpisode,"reflect":_vm.useResumeNotifications,"label":"Show notifications asking me to resume"},on:{"statechange":_vm.toggleResumeNotifications}})],1)]),_vm._v(" "),_c('section',[_c('h3',[_vm._v("Video player")]),_vm._v(" "),_c('ul',[_c('checkbox',{attrs:{"reflect":_vm.autoplayNextVideo,"label":"Autoplay next episode"},on:{"statechange":_vm.toggleAutoplayNext}}),_vm._v(" "),_c('checkbox',{attrs:{"reflect":!_vm.showVideoUI,"label":"Hide the video player controls"},on:{"statechange":_vm.toggleVideoUi}})],1)]),_vm._v(" "),_c('section',[_c('h3',[_vm._v("Chat")]),_vm._v(" "),_c('ul',[_c('checkbox',{attrs:{"reflect":_vm.profanityEnabled,"label":"Allow profanity"},on:{"statechange":_vm.toggleProfanity}})],1),_vm._v(" "),_c('div',{staticClass:"input-group"},[_c('label',{attrs:{"for":"muted-users"}},[_vm._v("Muted Users")]),_vm._v(" "),_c('ul',{staticClass:"data-list scroll-container"},[_vm._l((_vm.mutedUsers),function(user){return _c('li',{key:user.id},[_c('p',[_vm._v(_vm._s(user.username))]),_vm._v(" "),_c('a',{staticClass:"fixed",on:{"click":function($event){$event.preventDefault();return _vm.unmuteUser(user)}}},[_c('svg',{staticClass:"icon",attrs:{"viewBox":"0 0 16 16"}},[_c('polygon',{attrs:{"points":"3,12 7,8 3,4 4,3 8,7 12,3 13,4 9,8 13,12 12,13 8,9 4,13"}})])])])}),_vm._v(" "),(Object.keys(_vm.mutedUsers).length === 0)?_c('li',[_c('p',[_vm._v("You have not muted any users")])]):_vm._e()],2)])]),_vm._v(" "),_c('section',[_c('h3',[_vm._v("Miscellaneous")]),_vm._v(" "),_c('ul',[_c('checkbox',{attrs:{"disabled":!_vm.browserNotificationsSupported,"reflect":_vm.useBrowserNotifications,"label":"Enable browser notifications"},on:{"statechange":_vm.toggleBrowserNotifications}}),_vm._v(" "),_c('checkbox',{attrs:{"label":"For our Aussie staff only"},on:{"statechange":_vm.toggleAusie}})],1)])])]),_vm._v(" "),_c('chat',{class:{ 'is-open': _vm.chatOpen },attrs:{"autoconnect":_vm.showSidebar}})],1)}
var staticRenderFns = []

export { render, staticRenderFns }